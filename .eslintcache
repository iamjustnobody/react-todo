[{"C:\\Users\\Administrator\\test\\todo\\my-todos\\src\\index.js":"1","C:\\Users\\Administrator\\test\\todo\\my-todos\\src\\App.js":"2","C:\\Users\\Administrator\\test\\todo\\my-todos\\src\\reportWebVitals.js":"3","C:\\Users\\Administrator\\test\\todo\\my-todos\\src\\Todo.js":"4","C:\\Users\\Administrator\\test\\todo\\my-todos\\src\\Form.js":"5","C:\\Users\\Administrator\\test\\todo\\my-todos\\src\\Todoitem.js":"6"},{"size":504,"mtime":1618838150051,"results":"7","hashOfConfig":"8"},{"size":3016,"mtime":1611970048433,"results":"9","hashOfConfig":"8"},{"size":362,"mtime":499162500000,"results":"10","hashOfConfig":"8"},{"size":926,"mtime":1611961827541,"results":"11","hashOfConfig":"8"},{"size":1845,"mtime":1611969873128,"results":"12","hashOfConfig":"8"},{"size":1737,"mtime":1611970048421,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"22ht9c",{"filePath":"16","messages":"17","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"18","usedDeprecatedRules":"19"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"19"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"19"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26","usedDeprecatedRules":"19"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},"C:\\Users\\Administrator\\test\\todo\\my-todos\\src\\index.js",[],"C:\\Users\\Administrator\\test\\todo\\my-todos\\src\\App.js",["30"],"import logo from './logo.svg';\n//import './App;\nimport {Form} from \"./Form\";\nimport {Todo} from \"./Todo\";\nimport \"./App.css\"; //or import in index css\nimport React, {useEffect, useState} from 'react';\n\nfunction App() {\n    const [inputText,setInputText]=useState(\"\");\n    const [todos,setTodos]=useState([]); //[{text:\"hah\",completed:true,id:500,}]\n    const [status,setStatus]=useState(\"All\");\n    const [filteredTodos,setFilteredTodos]=useState(todos);\n\n    const todoItemFilter = () => {\n        if(status===\"Completed\"){\n            setFilteredTodos(todos.filter(item=>{return item.completed===true;}));\n        } //item=>item.completed===true\n        else if(status===\"Uncompleted\"){\n            setFilteredTodos(todos.filter(item=>{return item.completed===false;}));\n        } //item=>item.completed!==false\n        else\n            setFilteredTodos(todos);\n    }\n\n    const ipChangeHandler = (e) => {\n        setInputText(e.target.value);\n   //     console.log(inputText);\n    }\n    const todosLoader = (e) =>{\n        e.preventDefault();\n        setTodos([...todos,{text:inputText,completed:false,id:Math.random()*1000}]); //console.log(todos);\n        setInputText(\"\"); //console.log(todos);\n     //   todoItemFilter(); //yibu //todosLoader={(e)=>{todosLoader(e);todoItemFilter();} //yibu\n    }\n\n    const statusHandler = (e) => {\n        setStatus(e.target.value);\n    //    todoItemFilter(); //opt if useEffect //yibu //statusHandler={(e)=>{statusHandler(e);todoItemFilter();}} //yibu\n    }\n //   useEffect(todoItemFilter,[]);\n    useEffect(todoItemFilter,[status,todos]);\n  //  useEffect(todoItemFilter,[status]); //no todos not showing todolists UI//if \"All\" and add new item - not showing in UI\n    // useEffect(todoItemFilter,[status,filteredTodos]);\n    //filteredTodos 1)change todos/todos2b completed state (see todoitem.js) 2) add new items not showing in UI// so change filteredTodos to todos in useeffect\n    //if changing todos2b or settodos2b to (set)filteredtodos2b in todoitem.js (completed/trashItem), and keeping filteredTodos in useeffect\n    // - changing completed state will line through //(completed/trashItem)\n    //line through - className=todoi.completed?\"completed\":\"\" in todoitem.js but filteredtodos2b/filteredTodos will be reset to todos/todos2b due to effect\n\n  return ( //inputtext={inputText} state change render UI/component   //form.js logic todojs UI\n    <div className=\"App\">\n        <header> My to-do list!</header>\n      <Form setinputtext={setInputText} inputtext={inputText} ipChangeHandler={ipChangeHandler}\n      settodos1={setTodos} todos1={todos} todosLoader={todosLoader}\n      setstatus={setStatus} status1={status} statusHandler={statusHandler}\n      todoItemFilter1={todoItemFilter} />\n      <Todo todos2={todos} settodos2={setTodos} todoItemFilter2={todoItemFilter}\n            filteredtodos2={filteredTodos}\n            setfilteredtodos2={setFilteredTodos}/>\n    </div>\n  );// setfilteredtodos2={setFilteredTodos} passed onto todojs\n}\n\nexport default App;\n",["31","32"],"C:\\Users\\Administrator\\test\\todo\\my-todos\\src\\reportWebVitals.js",[],"C:\\Users\\Administrator\\test\\todo\\my-todos\\src\\Todo.js",[],"C:\\Users\\Administrator\\test\\todo\\my-todos\\src\\Form.js",["33","34"],"import React from 'react';\r\n\r\nexport const Form = ({setinputtext,inputtext,ipChangeHandler,settodos1,todos1,todosLoader,setstatus,status1,statusHandler,\r\n                     todoItemFilter1}) => {  //(props)=>{} //props.xxx\r\n\r\n\r\n    const handleIpChange=(e)=>{\r\n        setinputtext(e.target.value);\r\n    //    console.log(inputtext); //ok\r\n     //   props.setinputtext(e.target.value); console.log(props.inputtext); //ok\r\n    }  //<input  onChange={ipChangeHandler}/> //or onChange={props.ipChangeHandler}//ok\r\n\r\n    const loadTodos = (e) =>{\r\n        e.preventDefault();\r\n        settodos1([...todos1,{text:inputtext,completed:false,id:Math.random()*1000}]); //console.log(todos); //array\r\n        setinputtext(\"\"); //console.log(todos);\r\n   //     todoItemFilter1(); //opt if useEffect in app.js //still yibu\r\n    } //onClick={loadTodos} onClick={todosLoader} onClick={props.todosLoader}\r\n//onClick={()=>{loadTodos();todoItemFilter1();}} //yibu\r\n    const handleStatus = (e) => {\r\n        setstatus(e.target.value);\r\n    //    todoItemFilter1(); //opt if useEffect in app.js //still yibu\r\n    } ////onChange={()=>{handleStatus();todoItemFilter1();}} //yibu\r\n\r\n    return (\r\n        <form>\r\n            <input type=\"text\" className=\"todo-input\" onChange={ipChangeHandler} value={inputtext}/>\r\n            <button className=\"todo-button\" type=\"submit\" onClick={todosLoader}>\r\n                <i className=\"fas fa-plus-square\"></i>\r\n            </button>\r\n            <div className=\"select\">\r\n                <select onChange={handleStatus} name=\"todos\" className=\"filter-todo\">\r\n                    <option value=\"All\">All</option>\r\n                    <option value=\"Completed\">Completed</option>\r\n                    <option value=\"Uncompleted\">Uncompleted</option>\r\n                </select>\r\n            </div>\r\n        </form>\r\n    );\r\n}","C:\\Users\\Administrator\\test\\todo\\my-todos\\src\\Todoitem.js",[],["35","36"],{"ruleId":"37","severity":1,"message":"38","line":1,"column":8,"nodeType":"39","messageId":"40","endLine":1,"endColumn":12},{"ruleId":"41","replacedBy":"42"},{"ruleId":"43","replacedBy":"44"},{"ruleId":"37","severity":1,"message":"45","line":7,"column":11,"nodeType":"39","messageId":"40","endLine":7,"endColumn":25},{"ruleId":"37","severity":1,"message":"46","line":13,"column":11,"nodeType":"39","messageId":"40","endLine":13,"endColumn":20},{"ruleId":"41","replacedBy":"47"},{"ruleId":"43","replacedBy":"48"},"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","no-native-reassign",["49"],"no-negated-in-lhs",["50"],"'handleIpChange' is assigned a value but never used.","'loadTodos' is assigned a value but never used.",["49"],["50"],"no-global-assign","no-unsafe-negation"]